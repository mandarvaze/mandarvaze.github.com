<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Desi Penguin's Blog - misc</title><link href="https://mandarvaze.github.io/" rel="alternate"></link><link href="https://mandarvaze.github.io/feeds/misc.atom.xml" rel="self"></link><id>https://mandarvaze.github.io/</id><updated>2018-01-09T17:04:53+00:00</updated><entry><title>2017 : Another great year</title><link href="https://mandarvaze.github.io/2018/01/2017-another-great-year.html" rel="alternate"></link><published>2018-01-09T17:04:53+00:00</published><updated>2018-01-09T17:04:53+00:00</updated><author><name>Mandar Vaze</name></author><id>tag:mandarvaze.github.io,2018-01-09:/2018/01/2017-another-great-year.html</id><summary type="html">
&lt;div class="section" id="learning"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Learning&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="programming-language"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id2"&gt;Programming Language&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the review of 2016, I had written about "learning go".&lt;/p&gt;
&lt;p&gt;Well, that didn't happen.&lt;/p&gt;
&lt;p&gt;But instead I picked up "elixir". I loved it. I did several exercises from
codewars.&lt;/p&gt;
&lt;p&gt;Initially, the exercises looked too "amateurish", but once I hit a
road-block, where I was required to …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">
&lt;div class="section" id="learning"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Learning&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="programming-language"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id2"&gt;Programming Language&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the review of 2016, I had written about "learning go".&lt;/p&gt;
&lt;p&gt;Well, that didn't happen.&lt;/p&gt;
&lt;p&gt;But instead I picked up "elixir". I loved it. I did several exercises from
codewars.&lt;/p&gt;
&lt;p&gt;Initially, the exercises looked too "amateurish", but once I hit a
road-block, where I was required to use recursion instead of loops, I realized
that "simple" exercises are important to get my head around the functional
paradigm.&lt;/p&gt;
&lt;p&gt;I also purchased my first Udemy course to learn Elixir + Phoenix.&lt;/p&gt;
&lt;p&gt;I had hoped to use it in a "real" project, but that didn't happen.&lt;/p&gt;
&lt;p&gt;and towards the end of the year, I again picked up "go lang" (This is for a
project I will be working on in 2018) This time, I took another udemy course, by
the same instructor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="non-programming-language"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id3"&gt;Non Programming Language&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I've started learning Esperanto, after learning about it on one of the
freakonomics podcast. I'm using Duolingo.&lt;/p&gt;
&lt;p&gt;The language is simple (as claimed) so far.
But I am worried that without regular practice, I might forget it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="visual-note-taking"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Visual note taking&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Completed Visual Note taking 101 course by sunni brown
Completed "Notes a like a genius" course on Udemy&lt;/p&gt;
&lt;p&gt;While doing the Udemy course, took "visual" notes based on what I learnt from
sunni brown course.&lt;/p&gt;
&lt;p&gt;You can look at my new (and old) &lt;a class="reference external" href="https://mandarvaze.bitbucket.io/galleries/sketchnotes/"&gt;sketchnotes&lt;/a&gt; on my other blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="journaling"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;Journaling&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In late November, early december, Started journaling.&lt;/p&gt;
&lt;p&gt;I'm still figuring it out.&lt;/p&gt;
&lt;p&gt;I'm applying some principles I learnt in the visual note taking course. I'm
making it "interesting"&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="meditation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;Meditation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I started using "Insight Timer" app.&lt;/p&gt;
&lt;p&gt;As of today, I have been meditating continuously for 279 days since I began !&lt;/p&gt;
&lt;p&gt;What I liked about it was variety it provides, but it would have been nice if
there was an option to download the "favourite" ones, rather than having to be
connected to listen to same one daily. (Recent version has this as a paid
option)&lt;/p&gt;
&lt;p&gt;Eventually, I started using just the timer without any guided meditation.&lt;/p&gt;
&lt;p&gt;I'm not really sure how it impacted me (positively) but at least I got a good
habit out of it.&lt;/p&gt;
&lt;p&gt;Lately (early/mid December) I have started doing "Isha Kriya". I start the
insight timer when I do it, since it is a form of meditation, and allows me to
record my timing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="blogging"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;Blogging&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Didn't happen as much as 2016&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="drawing-sketching"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;Drawing - Sketching&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I've been much more deliberate this year. I created an &lt;a class="reference external" href="https://www.instagram.com/mandar_vaze/"&gt;instagram account&lt;/a&gt; to share my sketches.&lt;/p&gt;
&lt;p&gt;Ohh, I also bought "paid" software "flume", which is an instragram app for macOS&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="plans-for-2018"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;Plans for 2018&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My current project has come to an end.&lt;/p&gt;
&lt;p&gt;I've started learning about blockchain, smart contracts and Solidity development.
This is the new area I wish to explore.&lt;/p&gt;
&lt;p&gt;Since "core" development of both bitcoin and ethereum is in go lang. I may get a
chance to put my &lt;code&gt;go-lang&lt;/code&gt; skills to practical use.&lt;/p&gt;
&lt;p&gt;I also want to blog more regularly.&lt;/p&gt;
&lt;/div&gt;
</content><category term="personal"></category><category term="thoughts"></category></entry><entry><title>Writing Pelican blog post using Nikola new_post</title><link href="https://mandarvaze.github.io/2017/06/writing-pelican-blog-post-using-nikola-new_post.html" rel="alternate"></link><published>2017-06-16T20:53:49-06:30</published><updated>2017-06-16T20:53:49-06:30</updated><author><name>Mandar Vaze</name></author><id>tag:mandarvaze.github.io,2017-06-16:/2017/06/writing-pelican-blog-post-using-nikola-new_post.html</id><summary type="html">&lt;p&gt;In my &lt;a class="reference external" href="https://mandarvaze.github.io/2017/06/support-for-pelican-style-metadata-format-in-nikola.html"&gt;last post&lt;/a&gt;, I
mentioned that Nikola can use the pelican/resT docinfo style metadata.&lt;/p&gt;
&lt;p&gt;I had also mentioned that, now can I use the same post in both the places
without any change. But if I used nikola's &lt;code&gt;new_post&lt;/code&gt; command, the
metadata generated would be in &amp;quot;reST comments …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my &lt;a class="reference external" href="https://mandarvaze.github.io/2017/06/support-for-pelican-style-metadata-format-in-nikola.html"&gt;last post&lt;/a&gt;, I
mentioned that Nikola can use the pelican/resT docinfo style metadata.&lt;/p&gt;
&lt;p&gt;I had also mentioned that, now can I use the same post in both the places
without any change. But if I used nikola's &lt;code&gt;new_post&lt;/code&gt; command, the
metadata generated would be in &amp;quot;reST comments&amp;quot; style, which would work only for
Nikola.&lt;/p&gt;
&lt;p&gt;That means, I needed to modify the metadata, before I can use the exact same
post at both the places. This wasn't too much effort, yet it involved additional
efforts.&lt;/p&gt;
&lt;p&gt;Just days later, Nikola released another minor version, and here they have added
functionality that &lt;code&gt;new_post&lt;/code&gt; would generate the skeleton in the correct
format, based on the configuration setting.&lt;/p&gt;
&lt;p&gt;In my particular case, I have added the following like to &lt;code&gt;conf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;METADATA_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Pelican&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more details see &lt;a class="reference external" href="https://getnikola.com/handbook.html#metadata-formats"&gt;documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Currently for this format, only limited metadata headers are generated : Title
(reST style), &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;slug&lt;/code&gt; and &lt;code&gt;date&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &amp;quot;default&amp;quot; on the other hand have a lot more headers like &lt;code&gt;tags&lt;/code&gt;,
&lt;code&gt;category&lt;/code&gt; and more (which I don't use)&lt;/p&gt;
&lt;p&gt;So it would be nice if all the metadata headers were generated.&lt;/p&gt;
&lt;p&gt;The way Nikola is making improvements, who knows, this functionality might just
be available in the next release&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;em&gt;In case it is not clear, I have done exactly what the title says.&lt;/em&gt;&lt;/p&gt;
</content><category term="blogging"></category><category term="nikola"></category></entry><entry><title>Support for pelican style metadata format in nikola</title><link href="https://mandarvaze.github.io/2017/06/support-for-pelican-style-metadata-format-in-nikola.html" rel="alternate"></link><published>2017-06-11T05:24:58-06:30</published><updated>2017-06-11T05:24:58-06:30</updated><author><name>Mandar Vaze</name></author><id>tag:mandarvaze.github.io,2017-06-11:/2017/06/support-for-pelican-style-metadata-format-in-nikola.html</id><summary type="html">&lt;p&gt;Few years ago, python.__init__ podcast had invited creators of two most popular
static site generators written in python i.e. &lt;a class="reference external" href="http://getpelican.com/"&gt;pelican&lt;/a&gt; and &lt;a class="reference external" href="http://getnikola.com/"&gt;nikola&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In that episode, they were asked why do these two SSGs have different meta data
format (aka front matter). While I don't remember &amp;quot;why&amp;quot; but Roberto …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Few years ago, python.__init__ podcast had invited creators of two most popular
static site generators written in python i.e. &lt;a class="reference external" href="http://getpelican.com/"&gt;pelican&lt;/a&gt; and &lt;a class="reference external" href="http://getnikola.com/"&gt;nikola&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In that episode, they were asked why do these two SSGs have different meta data
format (aka front matter). While I don't remember &amp;quot;why&amp;quot; but Roberto Alsina of
Nikola had suggested that he would support other metadata formats for better
compatibility.&lt;/p&gt;
&lt;p&gt;This was back in 2015.&lt;/p&gt;
&lt;p&gt;Fast forward to 2017.&lt;/p&gt;
&lt;p&gt;Nikola has delivered on that promise.&lt;/p&gt;
&lt;p&gt;Latest &lt;a class="reference external" href="https://github.com/getnikola/nikola/releases/tag/v7.8.7"&gt;version&lt;/a&gt; of
nikola now supports pelican style among other formats. It also supports YAML and
TOML style front matters used by other non-pythonic SSGs like Hugo and Jekyll&lt;/p&gt;
&lt;p&gt;This is a BIG deal.&lt;/p&gt;
&lt;p&gt;This allows me to easily share the same source between variety of SSGs without
having to port the posts.&lt;/p&gt;
&lt;p&gt;I can easily cross-post the exact same content between pelican and nikola, like
I just &lt;a class="reference external" href="http://mandarvaze.github.io/2017/06/pynev-and-virtualenv.html"&gt;did&lt;/a&gt;
(See footer)&lt;/p&gt;
&lt;p&gt;I can &amp;quot;move&amp;quot; from nikola to hugo (which I have been thinking about a lot, since
Hugo has lot of nicer themes. Nikola - not so much) I can continue to use
nikola, but use YAML/TOML style front matter, and one day BOOM, just run hugo
compiler to generate the entire site in hugo. Off course, this is easier said
than done. But at least there won't be any &amp;quot;porting&amp;quot;&lt;/p&gt;
&lt;p&gt;I can use tools like &lt;code&gt;nikola new_post&lt;/code&gt; across the SSGs. In fact I just did
that for &lt;strong&gt;this&lt;/strong&gt; post. pelican doesn't have such command, AFAIK, so created the
skeleton using nikola's new_post command, moved over the generated file to
pelican blog area, and started writing.&lt;/p&gt;
</content><category term="nikola"></category></entry><entry><title>2016 was a great year</title><link href="https://mandarvaze.github.io/2017/01/2016-review.html" rel="alternate"></link><published>2017-01-08T05:30:00-06:30</published><updated>2017-01-08T05:30:00-06:30</updated><author><name>Mandar Vaze</name></author><id>tag:mandarvaze.github.io,2017-01-08:/2017/01/2016-review.html</id><summary type="html">
&lt;p&gt;Some of the highlights of the year gone by&lt;/p&gt;
&lt;div class="section" id="moved-to-spacemacs"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Moved to spacemacs&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I had started experimenting with spacemacs around late 2015. In 2016, I
completely switched to spacemacs. I'm consciously saying spacemacs, because
although it is "emacs" I am used to spacemacs keybindings, and may not be able
to use …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
&lt;p&gt;Some of the highlights of the year gone by&lt;/p&gt;
&lt;div class="section" id="moved-to-spacemacs"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Moved to spacemacs&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I had started experimenting with spacemacs around late 2015. In 2016, I
completely switched to spacemacs. I'm consciously saying spacemacs, because
although it is "emacs" I am used to spacemacs keybindings, and may not be able
to use "plain" emacs on any other system. (Turns out it is said that unlike
vi/vim, no two emacs users can use each others system, because of heavy personal
customizations.😉 )&lt;/p&gt;
&lt;p&gt;I used spacemacs mainly for python development, but used org-mode as well.&lt;/p&gt;
&lt;p&gt;I tried using &lt;code&gt;mu4e&lt;/code&gt; partially successfully for a while, but gave up. Time
to give it another go in 2017.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="blogged"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Blogged&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Wrote 28 posts on my (relatively) new &lt;a class="reference external" href="http://mandarvaze.bitbucket.io/2016/index.html"&gt;blog&lt;/a&gt; Not enough on this blog
though. I mean to combined both of them this year. &lt;a class="reference external" href="http://mandarvaze.github.io/2016/08/easier-blogging.html#finalize-the-blog-home"&gt;See&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Why it worked ? I had clear focus about &lt;em&gt;what&lt;/em&gt; to write about. Also, I had
decided to "just ship it" rather than keep editing the draft till it is perfect.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sketched"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Sketched&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Did about 25 &lt;a class="reference external" href="http://mandarvaze.bitbucket.io/galleries/sketches/"&gt;sketches&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some of the initial ones are scanned/uploaded almost as a
second thought (and it was. They were drawn to amuse my son, hence "any" paper
would do.)&lt;/p&gt;
&lt;p&gt;Later I because a bit conscious. Now I draw for myself. Hence better "paper",
background etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="shipped-product"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Shipped Product&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In 2016, I shipped one more product. This is my third product which I created
from the ground up. Earlier two products are in web2py.&lt;/p&gt;
&lt;p&gt;This time around, I did several things differently.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Used REST API + Javascript for the front end - style architecture. (Just to be
clear, I created the REST API, someone else worked on the web app and the
android app)&lt;/li&gt;
&lt;li&gt;Used Python Eve framework (based on flask)&lt;/li&gt;
&lt;li&gt;Started writing unit test cases (using &lt;code&gt;pytest&lt;/code&gt;). Helped a lot with a
big refactoring effort.&lt;/li&gt;
&lt;li&gt;Wrote API documentation using &lt;code&gt;sphinx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Used gitlab (Earlier products used privately hosted git repo)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="plans-for-2017"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;Plans for 2017&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Start using golang seriously&lt;/li&gt;
&lt;li&gt;Email within spacemacs&lt;/li&gt;
&lt;li&gt;Continue blogging&lt;/li&gt;
&lt;li&gt;Continue drawing&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="thoughts"></category><category term="personal"></category></entry></feed>