<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Desi Penguin's Blog</title><link href="http://mandarvaze.github.com/" rel="alternate"></link><link href="http://mandarvaze.github.com/feeds/tutorial.atom.xml" rel="self"></link><id>http://mandarvaze.github.com/</id><updated>2013-04-23T00:00:00+00:00</updated><entry><title>How to convert posterous blog to Markdown</title><link href="http://mandarvaze.github.com/2013/04/posterous-to-markdown.html" rel="alternate"></link><updated>2013-04-23T00:00:00+00:00</updated><author><name>Mandar Vaze</name></author><id>tag:mandarvaze.github.com,2013-04-23:2013/04/posterous-to-markdown.html</id><summary type="html">&lt;p&gt;As I have written in a &lt;a class="reference external" href="http://mandarvaze.github.io/2013/04/why-move-to-static-blog.html"&gt;previous&lt;/a&gt; post, I recently consolidated all of various blogs into this one.
Big one was posterous, especially because it is going away in a few days time, and I had two separate blogs (spaces as they used to call it) with them.
While the other posts talked about &lt;em&gt;why&lt;/em&gt; this one talks about &lt;em&gt;How&lt;/em&gt;&lt;/p&gt;
&lt;div class="section" id="option-1"&gt;
&lt;h2&gt;Option 1&lt;/h2&gt;
&lt;p&gt;Posterous provides a backup of all your articles, in XML format. while initially I thought this format may not be useful for importing into pelican, looking back, it might be. I haven't tried it, so I don't know whether it helps. For more details  refer to the &lt;a class="reference external" href="http://docs.getpelican.com/en/3.1.1/importer.html"&gt;pelican documentation&lt;/a&gt;
Hopefully this is easier of the two routes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="option-2"&gt;
&lt;h2&gt;Option 2&lt;/h2&gt;
&lt;p&gt;First you need to &amp;quot;get&amp;quot; your postreous posts from their server to your local machine.
You can use this &lt;a class="reference external" href="https://github.com/bmann/posterous-export/blob/master/posterous-export.rb"&gt;original&lt;/a&gt; script.&lt;/p&gt;
&lt;p&gt;I had to make some &lt;a class="reference external" href="https://github.com/mandarvaze/posterous-export/blob/master/posterous-export.rb"&gt;changes&lt;/a&gt; to the script, to make it work for me. I suggest you keep both of them handy.
&lt;em&gt;I am not a ruby developer. so my changes are rudimentary, not the way ruby developer would do. But based on the logic, some old style debugging, and stackover help for ruby syntax, I was able to get it to work.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fun-begins"&gt;
&lt;h2&gt;Fun Begins&lt;/h2&gt;
&lt;p&gt;For the script to work, you need (ruby off course) posterous &amp;quot;gem&amp;quot;. Consider this as a library or a package, if you aren't familair with Ruby.
not being a ruby programmer, I didn't know this, so I got the following error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo gem install posterous
&lt;span class="o"&gt;[&lt;/span&gt;sudo&lt;span class="o"&gt;]&lt;/span&gt; password &lt;span class="k"&gt;for &lt;/span&gt;mandar:
Fetching: ffi-1.7.0.gem &lt;span class="o"&gt;(&lt;/span&gt;100%&lt;span class="o"&gt;)&lt;/span&gt;
Building native extensions.  This could take a &lt;span class="k"&gt;while&lt;/span&gt;...
ERROR:  Error installing posterous:
    ERROR: Failed to build gem native extension.

    /usr/bin/ruby1.9.1 extconf.rb
 /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in &lt;span class="sb"&gt;`&lt;/span&gt;require&lt;span class="s1"&gt;&amp;#39;: cannot load such file -- mkmf (LoadError)&lt;/span&gt;
&lt;span class="s1"&gt;     from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39;&lt;/span&gt;
     from extconf.rb:4:in &lt;span class="sb"&gt;`&lt;/span&gt;&amp;lt;main&amp;gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;

 Gem files will remain installed in /var/lib/gems/1.9.1/gems/ffi-1.7.0 &lt;span class="k"&gt;for &lt;/span&gt;inspection.
 Results logged to /var/lib/gems/1.9.1/gems/ffi-1.7.0/ext/ffi_c/gem_make.out
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some googline revealed that this is a know problem which can be fixed by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install ruby1.9.1-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now I was successfully able to install the posterous gem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="modifying-posterous-gem"&gt;
&lt;h2&gt;Modifying posterous gem&lt;/h2&gt;
&lt;p&gt;Original error went away, the script moved forward till the next error.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;The option: username is invalid. &lt;span class="o"&gt;(&lt;/span&gt;Ethon::Errors::InvalidOption&lt;span class="o"&gt;)&lt;/span&gt;
Please try userpwd instead of username.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Found the &lt;a class="reference external" href="https://github.com/posterous/posterous-gem/issues/5#issuecomment-13539354"&gt;workaround&lt;/a&gt; on github posterous gem issues list&lt;/p&gt;
&lt;p&gt;Now that initial problem went away, I started getting the problems in the script itself. Good thing was I learnt &lt;a class="reference external" href="http://stackoverflow.com/questions/3955688/how-do-i-debug-ruby-scripts"&gt;debugging&lt;/a&gt; ruby script via printf method.
Realized there was problem w/ save_media. So at first I commented this function call, and then eveything was OK. I successfuly downloaded all my posts from one of the blogs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-the-images"&gt;
&lt;h2&gt;Getting the images&lt;/h2&gt;
&lt;p&gt;Now that I was partially successful, I wanted to make sure I get the images as well. So I added further debug/printf like statements, and in the process learnt about &amp;quot;if my_object.nil? &amp;quot; &lt;a class="reference external" href="http://lukaszwrobel.pl/blog/ruby-is-nil"&gt;idiom&lt;/a&gt;
With that I was able to get the images as well from my second blog. (and then another pass at my first blog, with images)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="this-is-just-the-beginning"&gt;
&lt;h2&gt;This is just the beginning&lt;/h2&gt;
&lt;p&gt;Now that you have your posts from posterous secured, the &amp;quot;deadline&amp;quot; pressure of posterous going away on April 30th, 2013 is removed. But I coulnd't just use the converted files as is.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Markdown files didn't work with pelican directly, even after installing Markdown python module in my virtual environment. I ran into &lt;a class="reference external" href="http://martinbrochhaus.com/2012/02/pelican.html#comment-726961261"&gt;this&lt;/a&gt; error. (&lt;em&gt;BTW, you should totally boormark the article on which the comment is made&lt;/em&gt;) So I &lt;em&gt;hand converted&lt;/em&gt; the md files to rst. It didn't take that long, but was a manual process.&lt;/li&gt;
&lt;li&gt;Links from posterous don't work, especially for images that were uploaded to posterous. These links point to posterous' own Amazon S3 (which will also go away soon) But you have the images downloaded by the ruby script, so all the links need to be fixed (manually)&lt;/li&gt;
&lt;li&gt;I also did some editing. Not all my posts were moved. e.g. One of my posts &amp;quot;Why posterous rocks&amp;quot; didn't make it to this blog :)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I am still learning the rst and pelican, so reference to local images folder works &amp;quot;partially&amp;quot; Luckily, most other places, I was already referring to third party image URL, so it didn't matter.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="how-to"></category><category term="ruby"></category><category term="learning"></category></entry><entry><title>Installing linux on HP Pavilion m6</title><link href="http://mandarvaze.github.com/2013/02/linux-on-hp-pavilion-m6.html" rel="alternate"></link><updated>2013-02-17T00:00:00+00:00</updated><author><name>Mandar Vaze</name></author><id>tag:mandarvaze.github.com,2013-02-17:2013/02/linux-on-hp-pavilion-m6.html</id><summary type="html">&lt;p&gt;After my trusty? Lenovo Thinkpad R400 developed problems (immediately after the 3 year warranty expired) I had to buy a new laptop. After initially thinking of ultrabook, I finally bought HP Pavilion m6.&lt;/p&gt;
&lt;p&gt;Since I needed this laptop for my work, I needed linux on it. I had &lt;em&gt;tried&lt;/em&gt; a live USB on linux mint 13 before I paid for the machine, so I was sure that linux support would not be an issue. Live boot confirmed that display and Wireless worked without problems.&lt;/p&gt;
&lt;p&gt;Before I decided to make changes, I created the rescue disk (Just to be safe) I ended up needing those not long after :( - By the way, as an aside, it is important to note that rescue disk creator program does &lt;strong&gt;not&lt;/strong&gt; accept DVR+RW the ones that can be used to write multiple times. So I had to go back to the shop to get them replaced.&lt;/p&gt;
&lt;p&gt;The main problem is that the machine already has 4 primary partitions. Thus linux installer is unable to create a new partition to boot from.
After looking thru forums, I realized that HP_tools partition can be easily removed. Way to do is :&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;First assign a drive letter to HP_TOOLS partition&lt;/li&gt;
&lt;li&gt;Copy the files to recovery partition&lt;/li&gt;
&lt;li&gt;Delete the HP_TOOLS partition -&lt;/li&gt;
&lt;li&gt;Recreate if needed, recreated as logical - thus solving max primary partitions problem.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once the max partition problem is resolved, installing linux isn't difficult.&lt;/p&gt;
&lt;p&gt;One other thing I did differently was to use Windows boot loader as default instead of GRUB (Felt safe at the time) I used &lt;a class="reference external" href="http://neosmart.net/EasyBCD/"&gt;EasyBCD&lt;/a&gt;
So now I first get Windows bootloader which lets me choose between windows and Linux mint 14 (which is the default) But once I select Linux mint, I get GRUB bootloader (which also consists on Windows 7 entry) So may be I didn't need &lt;a class="reference external" href="http://neosmart.net/EasyBCD/"&gt;EasyBCD&lt;/a&gt; after all. YMMV.&lt;/p&gt;
</summary><category term="linux"></category><category term="how-to"></category><category term="hp-m6"></category></entry></feed>